import pytestimport numpy as npimport syssys.path.append("src")from src.ants_travel import Ant,Populationfrom src.distance_matrix import  prepare_matrix,init_pheromonesdef test_population_constructor():    popul = Population(10,10)    expected = 10    actual = len(popul.ants)        if_ant_correct_expected = True    if len(popul.ants[0].cities_to_visit) == 9:        if_ant_correct_actual = True        assert expected == actual, "actual population size {0} doesnt match expected value of {0}".format(actual,expected)    assert if_ant_correct_expected == if_ant_correct_actual, "actual population ant {0} cities to visit  doesnt match expected value of 9".format(len(popul.ants[0].cities_to_visit))def test_population_move_ants():    popul = Population(10,10)    popul.move_ants()    moved_actual2 = None    moved_actual = None    moved_expected = True        for ant in popul.ants:        if len(ant.cities_to_visit)!=0:            moved_actual = False            break        else:            moved_actual = True                for ant in popul.ants:        if len(ant.visited_cities)!=10:            moved_actual2 == False            break        else:            moved_actual2 = True        assert moved_expected == moved_actual, "Not all ants in population move, in atleast one ant len of cities_to_visit isn't equal 0 "    assert moved_expected == moved_actual2, "Not all ants in population move, in atleast one ant len of visited_cities isn't equal defined number of cities "                                                